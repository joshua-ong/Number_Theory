#Today I made some foundational programs to more complicated algorithms
#I made functions to find prime factorization and gcd's
#Today helped me learn that a lot of code is made from smaller functions to get a final product

#Summer Math Program
#Lab 6
#Prime Factorization and Greatest Common Divisors

#Factoring, primes and base26
#Takes a natural number and returns a list of its divisors.
def divs(n):
	display = []
	for p in range(1,int(n ** .5) + 1):
		if((n % p) == 0):
			q = n / p 
			display.append(p)
			display.append(q)	
	return display

#Takes a natural number and returns a list representing its prime factorization
def factors(n):
	display = []
	count = 3
	while(n % 2 == 0):
			display.append(2)
			n = n / 2
			#print (n,count)	
	while( n > 1):
		while(n % count == 0):
			display.append(count)
			n = n / count
			#print (n,count)
		count+=2		
	return display
	
#Finds the gcd (greatest common divisor) of two numbers
#Finds their prime factorization and returns product of common factors
def gcdFact(a,b):
	A = factors(a)
	B = factors(b)
	total = 1
	for i in A:
		if i in B:
			total = total * i
			B.remove(i)
	return total

